apply plugin: 'groovy'
apply plugin: 'project-report'
apply plugin: 'maven-publish'

ext {
    groovyVersion = '2.2.0'
    hamcrestVersion = '1.3'
    junitVersion = '4.11'
    logbackVersion = '1.0.13'
    slf4jVersion = '1.7.5'
    spockVersion = '0.7-groovy-2.0'
}

defaultTasks 'clean', 'build', 'projectReport', 'publishToMavenLocal'

repositories {
    mavenCentral()
}

configurations.all {
    exclude group: 'commons-logging'
    exclude group: 'log4j'
    exclude module: 'junit-dep'
    exclude module: 'hamcrest-core'
}

project.group = 'org.kurron'
project.version = '1.0.0'

dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compile "org.slf4j:slf4j-ext:${slf4jVersion}"
    compile "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
    compile "ch.qos.logback:logback-core:${logbackVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"

    runtime "org.slf4j:jul-to-slf4j:${slf4jVersion}"
    runtime "org.slf4j:log4j-over-slf4j:${slf4jVersion}"

    testCompile "org.spockframework:spock-core:${spockVersion}"
    testCompile "junit:junit:${junitVersion}"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.9'
}

ext.sharedManifest = manifest {
    attributes( "Implementation-Title": project.name, "Implementation-Version": project.version )
}

jar {
    manifest = project.manifest {
        from sharedManifest
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    exclude('**/*.properties')
    manifest = project.manifest {
        from sharedManifest
    }
}

task testSourcesJar(type: Jar, dependsOn: testClasses) {
    classifier = 'test-sources'
    from sourceSets.test.allSource
    exclude('**/*.properties')
    manifest = project.manifest {
        from sharedManifest
    }
}

task testBinariesJar(type: Jar, dependsOn: testClasses) {
    classifier = 'test'
    from sourceSets.test.output
    manifest = project.manifest {
        from sharedManifest
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }
            artifact testSourcesJar {
                classifier "test-sources"
            }
            artifact testBinariesJar {
                classifier "test"
            }
        }
    }
}